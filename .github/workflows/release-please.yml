name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    name: Create Release
    runs-on: self-hosted
    if: "!contains(github.event.head_commit.message, 'chore(main): release')"
    steps:
      - uses: actions/checkout@v4
      
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
      
      - name: Auto-merge release PR
        if: ${{ steps.release.outputs.pr }}
        run: |
          echo '${{ steps.release.outputs.pr }}' | jq -r '.number' | xargs -I {} gh pr merge {} --squash --auto
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Close failed Renovate PRs
        if: ${{ steps.release.outputs.release_created }}
        run: |
          gh pr list --author "renovate[bot]" --state open --json number,statusCheckRollup --jq '.[] | select(.statusCheckRollup[]? | select(.status == "FAILURE" or .conclusion == "FAILURE")) | .number' | while read pr; do
            if [ -n "$pr" ]; then
              gh pr close $pr --comment "Auto-closed: subsequent dependency update merged successfully, indicating upstream fix or superseded update"
            fi
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
